---
- hosts: localhost
  tasks:
          #- name: Getting file
          #shell: "cp /builds/manageiq/{{ release }}/{{ version }}/manageiq-vsphere*.ova {{ version }}.ova"
    - name: Step 1 - Locating File
      find:
        paths: "/builds/manageiq/{{ release }}/{{ version }}/"
        patterns: "manageiq-vsphere*.ova"
      register: ova_image

    - name: Step 2 - Deploying OVA File
      vmware_deploy_ovf:
        hostname: '{{ myhost }}'
        username: '{{ lookup("env", "VMWARE_USER") }}'
        password: '{{ lookup("env", "VMWARE_PASSWORD") }}'
        cluster: dev-vc67-cluster
        datacenter: dev-vc67-DC
        datastore: NFS Share
        ovf: "{{ item.path }}"
        allow_duplicates: no
        validate_certs: no
        name: '{{ newvm }}'
        power_on: no
      with_items: "{{ ova_image.files }}"
      delegate_to: localhost

    - name: Step 3 - Adjusting memory size
      vmware_guest:
        hostname: '{{ myhost }}'
        username: '{{ lookup("env", "VMWARE_USER") }}'
        password: '{{ lookup("env", "VMWARE_PASSWORD") }}'
        validate_certs: no
        name: '{{ newvm }}'
        hardware:
          memory_mb: "{{ memorySize }}"
      delegate_to: localhost

    - name: Step 4 - Powering on appliance
      vmware_guest:
        hostname: '{{ myhost }}'
        username: '{{ lookup("env", "VMWARE_USER") }}'
        password: '{{ lookup("env", "VMWARE_PASSWORD") }}'
        validate_certs: no
        name: '{{ newvm }}'
        state: poweredon
        wait_for_ip_address: True
      delegate_to: localhost
      register: deployInfo

    - name: "Set host ip"
      set_stats:
        data:
          service_var__host_ip: '{{ deployInfo.instance.hw_eth0.ipaddresses[0] }}'
          host_ip: '{{ deployInfo.instance.hw_eth0.ipaddresses[0] }}'

#  - debug: msg="Hello, {{ input_host }}."
# - debug: var=vars
